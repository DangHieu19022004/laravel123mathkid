@extends('layouts.game')

@section('game_content')
<div class="container mx-auto px-4 py-8 max-w-md">
    <div class="bg-white rounded-xl shadow p-8">
        <div class="text-center mb-6">
            <h1 class="text-2xl font-bold text-blue-600">T√≠nh Di·ªán T√≠ch üìê</h1>
            <p class="text-gray-600 mt-2">C·∫•p ƒë·ªô <span id="levelDisplay">1</span> / <span id="maxLevelDisplay">5</span></p>
        </div>

        <div id="questionBox" class="text-center mb-6">
            <!-- H√¨nh + th√¥ng tin ƒë∆∞·ª£c render JS -->
        </div>

        <!-- Input v√† ƒë∆°n v·ªã tr√™n c√πng d√≤ng, r√∫t g·ªçn √¥ nh·∫≠p -->
        <div class="mb-4 flex items-center justify-center gap-2">
    <input id="answerInput" type="number" step="any" class="w-48 p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 text-center" placeholder="Nh·∫≠p">
    <span id="unitDisplay" class="font-medium">cm¬≤</span>
</div>

        <!-- Buttons ngang, k√≠ch th∆∞·ªõc ƒë·ªÅu nhau -->
        <div class="flex justify-center gap-4 mb-4">
    <button id="checkBtn" class="w-32 h-16 bg-green-500 text-white rounded-lg hover:bg-green-600 transition flex items-center justify-center">Ki·ªÉm tra</button>
    <button id="resetBtn" class="w-32 h-16 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition flex items-center justify-center">Ch∆°i l·∫°i</button>
    <button id="nextBtn" class="w-32 h-16 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition flex items-center justify-center hidden">Ti·∫øp theo</button>
</div>

        <div id="messageBox" class="text-center text-lg font-semibold min-h-[2rem]"></div>
    </div>
</div>
@endsection

@section('scripts')
<script>
// C·∫•u h√¨nh c√¢u h·ªèi
const levels = [
    { shape: 'h√¨nh vu√¥ng', dimensions: { c·∫°nh: 5 }, unit: 'cm¬≤', compute: d => d.c·∫°nh * d.c·∫°nh },
    { shape: 'h√¨nh ch·ªØ nh·∫≠t', dimensions: { 'chi·ªÅu d√†i': 6, 'chi·ªÅu r·ªông': 4 }, unit: 'cm¬≤', compute: d => d['chi·ªÅu d√†i'] * d['chi·ªÅu r·ªông'] },
    { shape: 'tam gi√°c', dimensions: { ƒë√°y: 6, 'chi·ªÅu cao': 4 }, unit: 'cm¬≤', compute: d => (d.ƒë√°y * d['chi·ªÅu cao'])/2 },
    { shape: 'h√¨nh thang', dimensions: { 'ƒë√°y l·ªõn': 8, 'ƒë√°y nh·ªè': 6, 'chi·ªÅu cao': 4 }, unit: 'cm¬≤', compute: d => (d['ƒë√°y l·ªõn']+d['ƒë√°y nh·ªè'])*d['chi·ªÅu cao']/2 },
    { shape: 'h√¨nh b√¨nh h√†nh', dimensions: { ƒë√°y: 7, 'chi·ªÅu cao': 5 }, unit: 'cm¬≤', compute: d => d.ƒë√°y * d['chi·ªÅu cao'] }
];
let currentLevel = parseInt(localStorage.getItem('areaGameLevel')||'0');
const maxLevel = levels.length;

// DOM
const levelDisplay = document.getElementById('levelDisplay');
const maxLevelDisplay = document.getElementById('maxLevelDisplay');
const questionBox   = document.getElementById('questionBox');
const answerInput   = document.getElementById('answerInput');
const unitDisplayEl = document.getElementById('unitDisplay');
const checkBtn      = document.getElementById('checkBtn');
const resetBtn      = document.getElementById('resetBtn');
const nextBtn       = document.getElementById('nextBtn');
const messageBox    = document.getElementById('messageBox');

maxLevelDisplay.textContent = maxLevel;

function saveLevel(){ localStorage.setItem('areaGameLevel', currentLevel); }

function renderQuestion(){
    const q = levels[currentLevel];
    levelDisplay.textContent = currentLevel+1;
    unitDisplayEl.textContent = q.unit;
    answerInput.value=''; messageBox.textContent=''; nextBtn.classList.add('hidden');
    
    // Render h√¨nh + th√¥ng s·ªë
    let html='<div class="inline-block p-4 border-2 border-blue-500 rounded-lg">';
    switch(q.shape){
        case 'h√¨nh vu√¥ng': html+=`<div class="w-32 h-32 border-4 border-blue-500 bg-blue-50 mx-auto"></div><p class="mt-2">C·∫°nh = ${q.dimensions.c·∫°nh} cm</p>`; break;
        case 'h√¨nh ch·ªØ nh·∫≠t': html+=`<div class="w-40 h-32 border-4 border-blue-500 bg-blue-50 mx-auto"></div><p class="mt-2">D√†i = ${q.dimensions['chi·ªÅu d√†i']} cm, R·ªông = ${q.dimensions['chi·ªÅu r·ªông']} cm</p>`; break;
        case 'tam gi√°c': html+=`<div class="relative w-32 h-32 mx-auto"><div class="absolute top-0 left-1/2 transform -translate-x-1/2 border-l-[50px] border-r-[50px] border-b-[87px] border-l-transparent border-r-transparent border-b-blue-500 bg-blue-50"></div></div><p class="mt-2">ƒê√°y = ${q.dimensions.ƒë√°y} cm, Cao = ${q.dimensions['chi·ªÅu cao']} cm</p>`; break;
        case 'h√¨nh thang': html+=`<div class="relative w-40 h-32 mx-auto"><div class="absolute inset-0 border-4 border-blue-500 transform skew-x-12 bg-blue-50"></div></div><p class="mt-2">ƒê√°y l·ªõn = ${q.dimensions['ƒë√°y l·ªõn']} cm, ƒê√°y nh·ªè = ${q.dimensions['ƒë√°y nh·ªè']} cm, Cao = ${q.dimensions['chi·ªÅu cao']} cm</p>`; break;
        case 'h√¨nh b√¨nh h√†nh': html+=`<div class="relative w-40 h-32 mx-auto"><div class="absolute inset-0 border-4 border-blue-500 transform skew-x-12 bg-blue-50"></div></div><p class="mt-2">ƒê√°y = ${q.dimensions.ƒë√°y} cm, Cao = ${q.dimensions['chi·ªÅu cao']} cm</p>`; break;
    }
    html+='</div>';
    questionBox.innerHTML = html;
}

checkBtn.addEventListener('click', ()=>{
    const q=levels[currentLevel]; const ans=parseFloat(answerInput.value);
    if(isNaN(ans)){alert('Nh·∫≠p ƒë√°p √°n!');return;}
    const correctAns=q.compute(q.dimensions);
    if(Math.abs(ans-correctAns)<1e-6){
        messageBox.textContent='üéâ Ch√≠nh x√°c!'; messageBox.classList.replace('text-red-600','text-green-600');
        if(currentLevel<maxLevel-1) nextBtn.classList.remove('hidden');
    } else {
        messageBox.textContent=`‚ùå Sai! ƒê√∫ng = ${correctAns}`; messageBox.classList.replace('text-green-600','text-red-600');
    }
});

nextBtn.addEventListener('click', ()=>{ currentLevel++; saveLevel(); renderQuestion(); });
resetBtn.addEventListener('click', ()=>{ currentLevel=0; saveLevel(); renderQuestion(); });

document.addEventListener('DOMContentLoaded', renderQuestion);
</script>
@endsection
